@using RestTraining.Web
@model RestTraining.Web.Models.FreeBookingViewModel

@{
    var viewDataProvider = new ViewDataProviderForView(this);
}

@if (viewDataProvider.IsFreeBookingDatesConflict)
{
    <h1>These dates are not avaliable for booking with this hotel number</h1>
    <h1>It is already booked</h1>
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.FreeBooking.HotelId)
    @Html.HiddenFor(x => x.FreeBooking.Id)
    
    <div class="editor-label">
        @Html.LabelFor(model => model.FreeBooking.BeginDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.FreeBooking.BeginDate)
        @Html.ValidationMessageFor(model => model.FreeBooking.BeginDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.FreeBooking.EndDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.FreeBooking.EndDate)
        @Html.ValidationMessageFor(model => model.FreeBooking.EndDate)
    </div>

    @Html.EditorFor(x => x.FreeBooking.HotelNumberId, MVC.Shared.Views.EditorTemplates.HotelNumberSelect, new { HotelNumbers = Model.HotelNumbers })

    @Html.EditorFor(x => x.FreeBooking.Client, MVC.Shared.Views.EditorTemplates.Client)

    <input type="submit" value="Book" class = "btn btn-primary" />
}

