@using RestTraining.Web
@model RestTraining.Web.Models.FreeBookingViewModel

@{
    var viewDataProvider = new ViewDataProviderForView(this);
}

@if (viewDataProvider.IsFreeBookingDatesConflict)
{
    <div class="alert alert-error">
        These dates are not avaliable for booking with this hotel number <br/>
        Hotel number is already booked for these days
    </div>
}

<div id="alert">
    
</div>

<div class="@if (!ViewData.ModelState.IsValidField("freeBooking.HotelNumberId"))
            { @Html.Raw("alert alert-error"); }">
    @Html.ValidationMessageFor(model => model.FreeBooking.HotelNumberId)
</div>
<div class="@if (!ViewData.ModelState.IsValidField("freeBooking.BeginDate"))
            { @Html.Raw("alert alert-error");
            }">
    @Html.ValidationMessageFor(model => model.FreeBooking.BeginDate)
</div>
<div class="@if (!ViewData.ModelState.IsValidField("freeBooking.EndDate"))
            { @Html.Raw("alert alert-error");
            }">
    @Html.ValidationMessageFor(model => model.FreeBooking.EndDate)
</div>
<div class="@if (!ViewData.ModelState.IsValidField("freeBooking.HotelId"))
            { @Html.Raw("alert alert-error");
            }">
    @Html.ValidationMessageFor(model => model.FreeBooking.HotelId)
</div>
<script type="text/javascript">
    

    $(document).ready(function ()
    {
        var startDate = new Date(@Model.FreeBooking.BeginDate.Subtract(new DateTime(1970, 1,1)).TotalMilliseconds);
        var endDate = new Date(@Model.FreeBooking.EndDate.Subtract(new DateTime(1970, 1,1)).TotalMilliseconds);
        startDate.setHours(0, 0, 0, 0);
        endDate.setHours(0, 0, 0, 0);
        
        $('#date-start')
            .datepicker()
            .on('changeDate', function (ev) {
                if (ev.date.valueOf() >= endDate.valueOf())
                {
                    $('#alert').addClass("alert alert-error");
                    $('#alert').show().text('The start date must be before the end date.');
                }
                else
                {
                    $('#alert').hide().removeClass("alert alert-error");
                }
                $('#date-start').datepicker('hide');
                startDate = new Date(ev.date);
                $('#date-start-display').text($('#date-start').data('date'));
                $('#FreeBooking_BeginDate').val($('#date-start').data('date'));
            });
        $('#date-end')
            .datepicker()
            .on('changeDate', function (ev) {
                if (ev.date.valueOf() <= startDate.valueOf())
                {
                    $('#alert').addClass("alert alert-error");
                    $('#alert').show().text('The end date must be after the start date.');
                }
                else
                {
                    $('#alert').hide().removeClass("alert alert-error");
                }
                $('#date-start').datepicker('hide');
                endDate = new Date(ev.date);
                $('#date-end-display').text($('#date-end').data('date'));
                $('#FreeBooking_EndDate').val($('#date-end').data('date'));
            });
        //$('#alert').hide();
    });
</script>

@using (Html.BeginForm())
{
    
    @Html.HiddenFor(x => x.FreeBooking.HotelId)
    @Html.HiddenFor(x => x.FreeBooking.Id)

    
    <input id="FreeBooking_BeginDate" name="BeginDate" type="hidden" value="@Model.FreeBooking.BeginDate.ToString("MM-dd-yyyy")"/>
    <input id="FreeBooking_EndDate" name="EndDate" type="hidden" value="@Model.FreeBooking.EndDate.ToString("MM-dd-yyyy")"/>

<table class="table">
    <thead>
        <tr>
            <th>Start date
              <a href="#" class="btn small" id="date-start" data-date-format="mm-dd-yyyy" data-date="@Model.FreeBooking.BeginDate.ToString("MM-dd-yyyy")">Change</a>
            </th>
            <th>End date
              <a href="#" class="btn small" id="date-end" data-date-format="mm-dd-yyyy" data-date="@Model.FreeBooking.EndDate.ToString("MM-dd-yyyy")">Change</a>
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td id="date-start-display">@Model.FreeBooking.BeginDate.ToString("MM-dd-yyyy")</td>
            <td id="date-end-display">@Model.FreeBooking.EndDate.ToString("MM-dd-yyyy")</td>
        </tr>
    </tbody>
</table>

    @Html.EditorFor(x => x.FreeBooking.HotelNumberId, MVC.Shared.Views.EditorTemplates.HotelNumberSelect, new { HotelNumbers = Model.HotelNumbers })

    @Html.EditorFor(x => x.FreeBooking.Client, MVC.Shared.Views.EditorTemplates.Client)

    <input type="submit" value="Book" class = "btn btn-primary" />
}


   @* 
    <div class="editor-label">
        @Html.LabelFor(model => model.FreeBooking.BeginDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.FreeBooking.BeginDate)
        @Html.ValidationMessageFor(model => model.FreeBooking.BeginDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.FreeBooking.EndDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.FreeBooking.EndDate)
        @Html.ValidationMessageFor(model => model.FreeBooking.EndDate)
    </div>*@

