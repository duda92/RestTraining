@using RestTraining.Web
@model RestTraining.Web.Models.BoundedBookingViewModel

@{
    var viewDataProvider = new ViewDataProviderForView(this);
}

<script type="text/javascript">
    function selectHotelNumber(index)
    {
        var currentValue = $("#BoundedBooking_HotelNumberId")[index].checked;
        $("#BoundedBooking_HotelNumberId")[index].checked = !currentValue;
    }
</script>

@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.BoundedBooking.HotelId)
    @Html.HiddenFor(x => x.BoundedBooking.Id)
    
    foreach (var boundedPeriod in Model.BoundedPeriods)
    {
    <div class="editor-label">
        @Html.LabelFor(model => boundedPeriod.BeginDate)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(model => boundedPeriod.BeginDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => boundedPeriod.EndDate)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(model => boundedPeriod.EndDate)
    </div>
    @Html.RadioButtonFor(x => x.BoundedBooking.BoundedPeriodId, boundedPeriod.Id)
    }
    <h2>Hotel numbers</h2>


    
    <table class="table table-striped table-bordered">
        <thead>
            <tr class="rowlink">
                <th>#</th>
                <th>Type</th>
                @foreach (var val in Enum.GetValues(typeof(RestTraining.Api.Domain.Entities.IncludeItemType)))
                {
                    <th>@val</th>
                }
                <th>Views</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody data-provides="rowlink">
            
            @for (int index = 0; index < Model.HotelNumbers.Count; index++)
            {
                var hotelNumber = Model.HotelNumbers[index];
                <tr class="success rowlink" onclick="selectHotelNumber(@index)">
                    <td>@(index+1)</td>
                    <td>@hotelNumber.HotelNumberType.ToString()</td>
                    @foreach (var val in Enum.GetValues(typeof(RestTraining.Api.Domain.Entities.IncludeItemType)))
                    {
                        <td style="font-size: 40px;">
                            @if (hotelNumber.IncludeItems.Contains(val))
                            { 
                                <i class="iconic-check" style="color: #51A351"></i>
                            }
                            else
                            {
                                <i class="iconic-x" style="color: #BD362F"></i>
                            }
                        </td>
                    }
                    <td>
                        @{
                            var viewsString = new System.Text.StringBuilder();
                        }
                        @foreach (var windowView in hotelNumber.WindowViews)
                        {
                            viewsString.Append(windowView.ToString());
                            if (hotelNumber.WindowViews.Last() != windowView)
                            {
                                viewsString.Append(", ");
                            }
                        }
                        @Html.Raw(viewsString.ToString())
                    </td>
                    <td>@Html.RadioButtonFor(x => x.BoundedBooking.HotelNumberId, hotelNumber.Id)</td>
                </tr>
                
        }
        </tbody>
    </table>

    @Html.EditorFor(x => x.BoundedBooking.Client, "Client")

    <input type="submit" value="Book" />
}
