@using RestTraining.Web
@model RestTraining.Web.Models.BoundedBookingViewModel

@{
    var viewDataProvider = new ViewDataProviderForView(this);
}
@if (viewDataProvider.IsBookingDatesConflict)
{
    <div class="alert alert-error">
        These dates are not avaliable for booking with this hotel number <br/>
        Hotel number is already booked for these days
    </div>
}

@if (Model.BoundedPeriods.Count == 0)
{
    <div class="alert alert-error">
        There is no bounded periods for this hotel 
        Add them in admin sections before make a booking
    </div>
}

@if (Model.HotelNumbers.Count == 0)
{
    <div class="alert alert-error">
        There is no hotel numbers for this hotel 
        Add them in admin sections before make a booking
    </div>
}

<div class="@if (!ViewData.ModelState.IsValidField("boundedBooking.HotelNumberId"))
            { @Html.Raw("alert alert-error"); }">
    @Html.ValidationMessageFor(model => model.BoundedBooking.HotelNumberId)
</div>
<div class="@if (!ViewData.ModelState.IsValidField("boundedBooking.BoundedPeriodId"))
            { @Html.Raw("alert alert-error");
            }">
    @Html.ValidationMessageFor(model => model.BoundedBooking.BoundedPeriodId)
</div>


@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.BoundedBooking.HotelId)
    @Html.HiddenFor(x => x.BoundedBooking.Id)
    
    @Html.EditorFor(x => x.BoundedBooking.BoundedPeriodId, MVC.Shared.Views.EditorTemplates.BoundedPeriodSelect, new { BoundedPeriods = Model.BoundedPeriods })
    @Html.EditorFor(x => x.BoundedBooking.HotelNumberId, MVC.Shared.Views.EditorTemplates.HotelNumberSelect, new { HotelNumbers = Model.HotelNumbers })

    @Html.EditorFor(x => x.BoundedBooking.Client, MVC.Shared.Views.EditorTemplates.Client)

    <input type="submit" value="Book" class = "btn btn-primary" />
}
