@using RestTraining.Domain
@model RestTraining.Api.DTO.HotelNumberDTO

<h2>Edit hotel number</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    @Html.HiddenFor(x => x.Id)
    
    <fieldset>
        <legend>Hotel number</legend>
      
        <div class="editor-label">
            @Html.Label("Hotel number type")
        </div>
        <div class="editor-field">
            @{
                var types = from HotelNumberType d in Enum.GetValues(typeof(HotelNumberType))
                                 select new {Id = (int) d, Name = d.ToString()};
                var list = new SelectList(types, "Id", "Name");
                @Html.DropDownListFor(model => model.HotelNumberType, list);
            }
            @Html.ValidationMessageFor(model => model.HotelNumberType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.WindowViews)
        </div>
    <div class="editor-field">
        @{
            var windowViewTypes = (from WindowViewType d in Enum.GetValues(typeof(WindowViewType))
                        select new { Id = (int) d, Name = d.ToString()}).ToList();
            var windowViewTypesList = new SelectList(windowViewTypes, "Id", "Name");
            
            @Html.ListBoxFor(model => model.WindowViews, windowViewTypesList, new { Multiple = "multiple" });
        }
        @Html.ValidationMessageFor(model => model.WindowViews)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}