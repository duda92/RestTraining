@using RestTraining.Web
@model RestTraining.Common.DTO.BoundedPeriodDTO

@{
    var viewDataProvider = new ViewDataProviderForView(this);
    
    if (viewDataProvider.IsInvalidBoundedPeriod)
    {
        <div class="alert alert-error">
            Entered date range intersects with existing bounded periods 
        </div>
    }
}

@using (Html.BeginForm()) {
        @Html.ValidationSummary(true)
    
        <fieldset>
            <legend>BoundedPeriod</legend>

            @Html.HiddenFor(model => model.Id)
    
            <div class="control-group">
                @Html.LabelFor(model => model.BeginDate, new { @class = "control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.BeginDate)
                    @Html.ValidationMessageFor(model => model.BeginDate)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.EndDate, new { @class = "control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.EndDate)
                    @Html.ValidationMessageFor(model => model.EndDate)
                </div>
            </div>
            
            <div class="button-grop">
                <input type="submit" value="Save" class = "btn btn-primary btn-small" />
                @Html.ActionLink("Back to List", MVC.BoundedPeriods.Index(viewDataProvider.HotelId), new { @class = "btn btn-primary btn-small"})
            </div>
        </fieldset>
    }
    
        
   